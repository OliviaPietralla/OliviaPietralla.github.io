/*
  This one CSS file is imported into both index.html AND hosono.html so you need to be careful that it 
  works for both.
*/

*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

:root{
  /* first two colours come from Kuroi's Manga Pallete Palette */
  /* https://lospec.com/palette-list/manga-pallete */
  --col-01:#1d1765;
  --col-02:#faffea;
  
  --col-04:#e878df;
  font-size: 16px;
  /* scroll behaviour makes the <a> links to ids scroll to position over time rather than immediately */
  scroll-behavior: smooth;
}

/* Transition duration applies to time it takes to change between modes. I decided on a slightly longer transition
   because I found it calming watching the colours slowly change from cream to navy and vise versa. */ 
body{
  padding: 1rem;
  background-color: var(--col-02);
  color: var(--col-01);
  transition-duration: 6s;
}

/* -- NAVIGATION -- */

nav {
  margin-top: 1rem;
}

/* A numbered system suggests to the reader that the sections must be read in order, but in this case,
   the headings are self-explanatory and the content can be read in any order, which is why there is a navigation bar. 
   I created a dot point list instead a numbered system. 
*/ 
nav li{
  font-size: 1rem;
  list-style-type: circle;
  padding: 8px;
}

/* I want the visual and interactive elements of the webpage buttons to be similar, as it provides consistency for the website users
   The buttons fill solid  when the cursor hovers over it. 
*/ 
nav li:hover {
  background-color: var(--col-04);
  color: var(--col-01);
}

/* -- */ 

section{
  margin-bottom: 2rem;
}

h1{
  font-size: 3rem;
}

h2{
  font-size: 2rem;
}

p{
  font-size: 1rem;
  margin-top: 1rem;
}

hr{
  border-color: var(--col-01);
}

figcaption{
  width: fit-content;
}

dl ul{
  margin-bottom: 0;
}

li{
  font-size: 1rem;

}

dd{
  padding-left: 60px;
}

li ul{
  padding-left: 40px;
}

a{
  color: var(--col-04);
}

.cursor{
  cursor: pointer;
}

.img-wrapper{
  width: 100%;
  margin-bottom: 1.5rem;
}

.img-figure{
  display: flex;
  flex-direction: column;
  align-items: center;
}

.article-img{
  width: 80%;
}

.res-columns{
  column-width: 25rem;
}

/* -- BUTTON -- */ 

/* Keeps the button to the top right of the screen, with a simple border outlining the text but not distracting from the content on screen. */ 
#mode-button{
  float: right;
  /* note the use of position: sticky to keep the button on the page even with scrolling */
  position: sticky;
  top: 1rem;
  padding: 10px 10px;
  cursor: pointer;
  border: 2px solid var(--col-01);
}

/* Like other buttons on the webpage, when the mouse is hovered over it, the button fills with a solid colour. 
   I like this effect especially on this button because it gives the user a slight preview of the function of the button. 
   The dark mode will have the background being a dark blue with light cream text and vise versa. */ 
#mode-button:hover{ 
  background-color: var(--col-01);
  color: var(--col-02);
}

#topButton{
  padding: 10px, 10px;
  border: 2px solid var(--col-01);
  color: var(--col-01);
}

/* ---- CODE FOR LOADING PAGE ---- */

#load-body{
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* -- BUTTON -- */

/* A dark border around the link clearly supports the words in indicating that it is a clickable button. */
#load-link{
  line-height: 2rem;
  color: #1d1765;
  background-color: transparent;
  border: 2px solid #1d1765;
}

/* When the user hovers over the button, their action is supported by a number of intuitive ways - based on past digital experiences. 
   The cursor changes into a pointer indicating the ability to click. 
   The button enlarges slightly, making it easier to see as an interaction. 
   The button colour is filled, making it stand out on the webpage. 
*/
#load-link:hover{
  cursor: pointer;
  transform: scale(1.1);
  background-color: #1d1765;
  color: var(--col-02);
}

/* -- THROBBER -- */

  /* I settled on a bouncing dot inspired loading animation. I think it is a fun and simple way to indicate to users that time is moving forward and the webpage is "thinking". */
  /* The container ensures that the dots are spaced evenly but also remain smaller than the title text when the webpage is resized. */ 
  /* we also initially set display to none so it only shows once the link is clicked */
#animation-container{
  width: 30%;
  display: none;
  flex-direction: row;
  justify-content: space-evenly;
  gap: 1rem;
}

/* Determines the size of the dots. With border-radius creating the roundness. */
.bouncingLoader{
  height: 40px;
  width: 40px;
  background-color: var(--col-01);
  border-radius: 50%;
  animation: loadingAnimation infinite;
}

/* I originally started creating keyframes at every 5-10 % to change the dots size or colours, 
   but then figured out that if you just create a keyframe at the start with the starting size and colour
   and one at the end or middle with the change to a different colour or size, the animation automatically fills in the rest smoothly. 
   So at the start of the animation, the dots are at a scale of 0 so that they grow to be the full size halfway and shrink back down at the end.
   Similarly, the colours are set to start and end at the main blue colour with opacity and only reach 100% opacity halfway through the animation. */ 
@keyframes loadingAnimation {
  0% {
    background-color: var(--col-01), 0.3;
    transform: scale(0);
  }

  50% {
    background-color: var(--col-01);
    transform: scale(1);
  }

  100% {
    background-color: var(--col-01), 0.3;
    transform: scale(0);
  }
}

/* To add to the smoothness of the animation I set a delay on each dot by 0.2 sec so that the animation starts on each dot slightly after the one in front, 
   creating a wave effect that is associated with this sort of loading animation. */
#bouncing-dot-1{
  animation: loadingAnimation 2s infinite;
}

#bouncing-dot-2{
  animation: loadingAnimation 2s infinite;
  animation-delay: 0.2s;
}

#bouncing-dot-3{
  animation: loadingAnimation 2s infinite;
  animation-delay: 0.4s;
}

#bouncing-dot-4{
  animation: loadingAnimation 2s infinite;
  animation-delay: 0.6s;
}

#bouncing-dot-5{
  animation: loadingAnimation 2s infinite;
  animation-delay: 0.8s;
}

#bouncing-dot-6{
  animation: loadingAnimation 2s infinite;
  animation-delay: 1s;
} 

/* ---- MEDIA QUERIES ---- */

/* -- MEDIUM DEVICES 600 - 992 */
@media only screen and (min-width: 600px) {
  :root{
    font-size: 20px;
  }
  
  .img-wrapper{
    width: 75%;
    margin: 1.5rem auto;
  }
}

/* -- LARGER DEVICES 992 + */
@media only screen and (min-width: 992px) {
  :root{
    font-size: 24px;
  }

  .img-wrapper{
    max-width: fit-content;
    float: right;
    margin: 1.5rem;
  }
}

@media (prefers-reduced-motion) {
  :root{
    scroll-behavior: auto;
  }
}